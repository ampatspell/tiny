// Project: <%= project.title %>
// World: <%= world.name %>
// Scenes: <%= scenes.length %>

#include <avr/pgmspace.h>
#include <stddef.h>
#include <stdint.h>
#include <tiny/scene/layer.h>
#include <tiny/scene/node.h>
#include <tiny/scene/scene.h>

<%
scenes.forEach((scene, idx) => scene.index = idx);
%>

namespace Tiny {
  namespace Scenes {

    <% scenes.forEach(scene => { %>
      <%= include('scene.cpp', { project, world, scene }) %>
    <% }) %>

    union SceneSizes {
    <% scenes.forEach(scene => { %>
      size_t scene_<%= scene.index %>[<%= scene.namespace %>::scene_size];
    <% }) %>
    };

    const uint8_t numberOfScenes = <%= scenes.length %>;
    const size_t storageSize = sizeof(SceneSizes);

    size_t getStorageSize() {
      return storageSize;
    }

    uint8_t getNumberOfScenes() {
      return numberOfScenes;
    }

    uint8_t _storage[storageSize];

    Scene *instantiate(uint8_t index) {
    <% scenes.forEach(scene => { %>
      if(index == <%= scene.index %>) {
        uint8_t *storage = _storage;
        Layer **layers = reinterpret_cast<Layer **>(storage + sizeof(<%= scene.className %>));
        <%= scene.className %> *scene = new (storage) <%= scene.className %>(<%= scene.namespace %>::scene, layers);
        storage += sizeof(<%= scene.className %>);
        storage += (sizeof(Layer *) * <%= scene.layers.length %>);
      <% scene.layers.forEach(layer => { %>
        {
          Node **nodes = reinterpret_cast<Node **>(storage + sizeof(<%= layer.className %>));
          <%= layer.className %> *layer = new (storage) <%= layer.className %>(<%= scene.namespace %>::<%= layer.variable %>, nodes);
          storage += sizeof(<%= layer.className %>);
          storage += (sizeof(Node *) * <%= layer.nodes.length %>);
          scene->addLayer(layer);
          {
            <% layer.nodes.forEach(node => { %>
              {
                <%= node.className %> *node = new (storage) <%= node.className %>(<%= scene.namespace %>::<%= node.variable %>);
                storage += sizeof(<%= node.className %>);
                layer->addNode(node);
              }
            <% }) %>
          }
        }
      <% }); %>
        return scene;
      }
    <% }); %>
      return nullptr;
    }

  }
}
